<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>閱讀心得 on Sian</title>
    <link>https://sunnyday0932.github.io/categories/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97/</link>
    <description>Recent content in 閱讀心得 on Sian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 09 Jan 2021 05:40:45 +0000</lastBuildDate><atom:link href="https://sunnyday0932.github.io/categories/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>閱讀心得:無瑕的程式碼 專業程式設計師的生存之道</title>
      <link>https://sunnyday0932.github.io/2021/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_%E7%84%A1%E7%91%95%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC-%E5%B0%88%E6%A5%AD%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E7%9A%84%E7%94%9F%E5%AD%98%E4%B9%8B%E9%81%93/</link>
      <pubDate>Sat, 09 Jan 2021 05:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2021/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_%E7%84%A1%E7%91%95%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC-%E5%B0%88%E6%A5%AD%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E7%9A%84%E7%94%9F%E5%AD%98%E4%B9%8B%E9%81%93/</guid>
      <description>前言 這本書是同事不久前主動拿給我的，起因是2020年底專案產生的一連串災難，於是他在某天就主動拿了這本書借我；一開始是跳著看，書內有些情境真的跟我們當時身陷處境很像，純粹也就是為了尋求認同，當時對解決方式不以為意，最近幾天有時間重頭開始看起又多體悟了不少。
本文 這本書是聲量滿高無瑕的程式碼番外篇，大多從業人員都有聽過正本，但這邊我自己是還沒看過正本，經過這次閱讀完，確實是提高我不少興趣去看無瑕的程式碼。
跟先前分享過的Soft Skills 軟實力大致的方向一樣，都是幫助職涯發展的，但相較於軟實力本書較著重在於探究 Programmer 在一整個專案中會遇到的情境，頁數不多總共也才216頁(包含序、目錄)，內容也滿貼近實際會遇到的狀況，要推薦的話我會覺得大概工作一段時間來看這本書會感同身受。
目錄  Chapter 1 專業主義（Professionalism） Chapter 2 說「不」（Saying No） Chapter 3 說「是」（Saying Yes） Chapter 4 寫程式（Coding） Chapter 5 測試驅動開發（Test Driven Development） Chapter 6 練習（Practicing） Chapter 7 驗收測試（Acceptance Testing） Chapter 8 測試策略（Testing Strategies） Chapter 9 時間管理（Time Management） Chapter 10 預估（Estimation） Chapter 11 壓力（Pressure） Chapter 12 協作（Collaboration） Chapter 13 團隊與專案（Teams and Projects） Chapter 14 輔導、學徒期與工藝典範（Mentoring, Apprenticeship, and Craftsmanship）  從目錄來看應該很明顯，全部著重在一個專案每個階段會需要面對的事情。
雖然章節切了14章，但其實內文都有相關聯。
例如：第一章的專業主義有提到 Programmer 要對自己的專案有責任感，這包含了時程、品質等，這邊就會連結到第二章、第三章在時程壓力下要如何協調專案確切內容有哪些是應該據理力爭拒絕的、而有哪些是該為自己負起責任的，連結到第九章、第十章時間管理、預估。</description>
    </item>
    
    <item>
      <title>閱讀心得:Grit 恆毅力</title>
      <link>https://sunnyday0932.github.io/2020/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_grit%E6%81%86%E6%AF%85%E5%8A%9B/</link>
      <pubDate>Wed, 01 Jul 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_grit%E6%81%86%E6%AF%85%E5%8A%9B/</guid>
      <description>前言 恆毅力這本書是大約一年前，在無意間晃到作者 TED 演講影片發現的(有興趣可以到此連結觀看)。 影片內容提到恆毅力，作者的敘述是．．．
 恆毅力是面對長遠目標時的熱情和毅力。 恆毅力是有耐力的表現。 恆毅力是日復一日依然對未來堅決不已，不只是這週、不只這個月，而是年復一年。 用心、努力工作來實現所堅信的那個未來。 恆毅力是將生活看作是一場馬拉松，不是短跑。   當時正值研究所考試失利，反覆思考很多問題，又想著要如何解決當前困境；看到這段敘述馬上就買了，但諷刺的是到現在才看完。
本文 這本書內容大致上都圍繞在成長型思維這個概念中，認為學習能力不是一成不變的，它會由於你的努力而產生變化。
提到努力大概會覺得很抽象，對於成功這兩個詞亦是。 所以作者作為一名心理學家，把她對於恆毅力研究對象分享出來，以下列舉幾個比較有印象的。
 西點軍校新生。 頂尖運動選手 Ex:世界盃足球賽隊伍。 拼字比賽選手。   研究目的是要知道這些所謂人家口中的成功者，他們是如何成功的？ 西點軍校，不比其他頂尖大學還難進入，相關報導可參閱，作者想知道在西點軍校這麼高壓的環境下，最後能撐到畢業的是哪些人？
世界盃足球賽，每年都有頂尖隊伍參與競爭，各隊都有頂尖的運動選手，最後會勝出的隊伍到底具備哪些能力？
拼字比賽選手，參與拚字比賽的選手，每天都要透過閱讀字典去認識一堆生詞，更多的是很長的字，最後獲得勝利的選手，他們到底跟其他人有甚麼不一樣？
那麼要如何培養恆毅力呢？  由內而外:自己培養興趣；養成習慣，每天作挑戰自己能力的練習；設定超越自我的目標；受到挫折不放棄希望。 由外而內:週遭的人也是影響培養恆毅力的關鍵，家長、教練、老師、老闆、導師、朋友都可以成為助力。 培養跌倒七次，要爬起來八次的力量。  關於失敗這件事，請用失敗重新定義成功。 幾年前也看過類似文章，可口可樂、網飛、亞馬遜如何以失敗為師，現在看起來很成功的公司，他們企業文化是如何讓員工願意去嘗試。
最後恆毅力並不是唯一 恆毅力只是作者研究出來結果的一種統稱，我的解讀是恆毅力是一種精神，它並不是一個人唯一的一種面向；Amazon 創辦人貝佐斯也提過類似概念，他說過小時候因為外婆吸菸過量，計算外婆如果依照這個速度只能活到幾歲而把外婆惹哭的故事，他說:「聰明是一種天賦，而善良一種選擇；天賦得來很容易，而選擇則頗為不易。」
後記 一年前買這本書大概看了一半就放到現在，最近重新拿起讀完又有不同心境；當時研究所重考兩次失利打擊真的滿大，一直在想到底哪裡做得不好，也是偶然間看到無限賽局這個思考方式。
 無限賽局中，真正的競爭對手其實不是別人，而是我們自己；真正的目標是讓自己（無論組織或個人）今年變得比去年更好。  相較於舊的賽局理論，無限賽局認為單次的輸贏並不重要，而是透過長遠的規劃，未來會在某一時刻逆轉賽局。
現在有了更完善的人生規劃，希望能藉由吸收這些不同的知識，讓自己能持續成長，在未來某個時刻去到自己想去的地方。
參考連結  恆毅力：人生成功的究極能力。  </description>
    </item>
    
    <item>
      <title>閱讀心得:Soft Skills 軟實力｜軟體開發人員的生存手冊</title>
      <link>https://sunnyday0932.github.io/2020/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_soft-skills-%E8%BB%9F%E5%AF%A6%E5%8A%9B%E8%BB%9F%E9%AB%94%E9%96%8B%E7%99%BC%E4%BA%BA%E5%93%A1%E7%9A%84%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8A/</link>
      <pubDate>Mon, 01 Jun 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97_soft-skills-%E8%BB%9F%E5%AF%A6%E5%8A%9B%E8%BB%9F%E9%AB%94%E9%96%8B%E7%99%BC%E4%BA%BA%E5%93%A1%E7%9A%84%E7%94%9F%E5%AD%98%E6%89%8B%E5%86%8A/</guid>
      <description>前言 這是踏入職場後第一本挑選的書，起因是公司教育訓練文件最後前輩列了一系列書單，其中名字最特別、歸類又不是技術類，看了試閱的第一頁就決定買了。
本文  目錄
 序:這是一本你從未見過的軟體開發書 Section 1 職涯 Section 2 自我行銷 Section 3 學習 Section 4 生產力 Section 5 理財 Section 6 健身 Section 7 心靈
目錄應該很明顯，這真的是從未見過專門寫給軟體開發人員的密技；玩遊戲都會都看密技了，職涯看一下應該也很合理。
這本書就是把踏入這行會發生的全部過程拆解，細分後再加以分析利弊整理出一些可供參考的方式。
拿第一章職涯作為舉例，當談到如何設立職涯目標的時候作者會先敘述自己的經驗並給出一些建議，再來教你如何設定出真正可以執行的目標(不會好高騖遠)，最後會給出練習的方式。
照著每一小節的練習，確實可以有助於自己思考與規劃。
最特別的大概是最後三章:理財、健身、心靈。
這部分作者就跳脫出職業生活的部分，提醒的是儘管開發人員有多熱愛自己的工作，下了班你還是會回歸日常。
而這部分就是針對日常生活給出的建議。
其中健身這章可以拉出來特別提一下，因為本身也開始健身兩年了，這本書對於健身觀念真的非常正確，不管是計算卡路里方式、制定健身課表、飲食全方位講解都很透徹。
作者也提到，因為職涯長時間坐著對開發人員真的是一大傷害；運動不僅能帶給職涯很多正面的幫助，要想達成目標，擁有健康的身體亦是必要條件，這也是我開始健身的初衷之一。   後記  這本書大概是一月入手，當時因為教育訓練落後狀態低迷，沒有想太多就是想趕快進步，看完也五個月過去了，這中間斷斷續續的閱讀、但堅持每個小節的即知即行都要自己做一遍，真的對我幫助不小；包含了現在決定開始經營部落格，有一部分原因也是因為看了這本書。
強烈建議軟體開發人員有機會都可以看看這本書，真的會對你職涯規劃有所幫助，但當然作者與我們生活環境落差，有些經驗並不適用於每個人，不能照單全收，這也是需要自行判斷，最後就像書中所述step by step有一天一定能達到自己目標的。</description>
    </item>
    
  </channel>
</rss>
