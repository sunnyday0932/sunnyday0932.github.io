<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on Sian</title>
    <link>https://sunnyday0932.github.io/tags/github/</link>
    <description>Recent content in github on Sian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 06 Dec 2020 12:01:15 +0800</lastBuildDate><atom:link href="https://sunnyday0932.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo主題Leaveit錯誤修改</title>
      <link>https://sunnyday0932.github.io/2020/hugo%E4%B8%BB%E9%A1%8Cleaveit%E9%8C%AF%E8%AA%A4%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sun, 06 Dec 2020 12:01:15 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/hugo%E4%B8%BB%E9%A1%8Cleaveit%E9%8C%AF%E8%AA%A4%E4%BF%AE%E6%94%B9/</guid>
      <description>本文 之前Google Console不斷提醒網頁結構有問題。
就是這個&amp;hellip;
之前都直接手動修改，昨天心血來潮決定把源頭找出來到底出在哪裡
經過同事幫忙，發現在主題資料夾下有一個seo_schema.html檔案。
詳細路徑在themes\LeaveIt\layouts\partials\seo_schema.html
裡面長這樣： 一開始裡面就少了一個括號，只要把這邊補上就正常啦。
{ &amp;quot;@context&amp;quot; : &amp;quot;http://schema.org&amp;quot;, &amp;quot;@type&amp;quot; : &amp;quot;BlogPosting&amp;quot;, &amp;quot;mainEntityOfPage&amp;quot;: { &amp;quot;@type&amp;quot;: &amp;quot;WebPage&amp;quot;, &amp;quot;@id&amp;quot;: &amp;quot;{{ .Site.BaseURL }}&amp;quot; }, &amp;quot;articleSection&amp;quot; : &amp;quot;{{ .Section }}&amp;quot;, &amp;quot;name&amp;quot; : &amp;quot;{{ .Title }}&amp;quot;, &amp;quot;headline&amp;quot; : &amp;quot;{{ .Title }}&amp;quot;, &amp;quot;description&amp;quot; : &amp;quot;{{ if .Description }}{{ .Description }}{{ else }}{{if .IsPage}}{{ .Summary }}{{ end }}{{ end }}&amp;quot;, &amp;quot;inLanguage&amp;quot; : &amp;quot;{{ .Site.LanguageCode }}&amp;quot;, &amp;quot;author&amp;quot; : &amp;quot;{{ if isset .Params &amp;quot;author&amp;quot; }}{{ .</description>
    </item>
    
    <item>
      <title>Hugo加入留言、觀看人數</title>
      <link>https://sunnyday0932.github.io/2020/hugo%E5%8A%A0%E5%85%A5%E7%95%99%E8%A8%80%E8%A7%80%E7%9C%8B%E4%BA%BA%E6%95%B8/</link>
      <pubDate>Sun, 24 May 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/hugo%E5%8A%A0%E5%85%A5%E7%95%99%E8%A8%80%E8%A7%80%E7%9C%8B%E4%BA%BA%E6%95%B8/</guid>
      <description>前言 開始使用Hugo後，對於目前使用的主題Leaveit不盡滿意，於是開始研究修改，改完又想在現在版型加上其他功能EX:觀看人數、留言功能，Google搜尋後有很多種方法，選了自己順眼的就開始動工，內容如下。
本文 一、留言功能 留言功能有很多方式，最後決定選用DISQUS，原本還有另一套utteranc，但&amp;hellip;DISQUS看起來較為順眼、再加上留言方式多元於是雀屏中選(?
對沒什麼高尚理由，單純就是覺得好看。
1、先到DISQUS註冊帳號。
2、註冊完後會到以下畫面，選擇下方選項 I want to install Disqus on my site。
(小提醒註冊完後記得先到信箱點選註冊確認信)
3、輸入website名稱，選擇Category分類，點選建立。
4、接下來會到選擇方案頁面，點選下方Basic版本(此為免費版)。
5、接著install頁面，會發現選項內並沒有HUGO，但不打緊，DISQUS提供自行手動設定，步驟稍後說明。
6、最後config設定，加入網站URL註冊步驟就完成了。
接下來就可以開始設定留言功能到我們的HUGO網站。
7、 開啟 Config.toml 加入下方參數。
disqusShortname = &amp;quot;你在DISQUS註冊時輸入的Website name&amp;quot; 8、接著在目錄/layouts/partials/內新增一個disqus.html檔案，官方提供的內容如下。 這邊需要注意的是，如果你是有使用主題，會需要移至主題底下目錄此路經新增。
&amp;lt;div id=&amp;quot;disqus_thread&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; (function() { // Don&#39;t ever inject Disqus on localhost--it creates unwanted // discussions from &#39;localhost:1313&#39; on your Disqus account... if (window.location.hostname == &amp;quot;localhost&amp;quot;) return; var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true; var disqus_shortname = &#39;{{ .</description>
    </item>
    
    <item>
      <title>Hugo架站教學</title>
      <link>https://sunnyday0932.github.io/2020/hugo%E6%9E%B6%E7%AB%99%E6%95%99%E5%AD%B8/</link>
      <pubDate>Sun, 10 May 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/hugo%E6%9E%B6%E7%AB%99%E6%95%99%E5%AD%B8/</guid>
      <description>前言 受到前輩、夥伴、朋友的激勵，決定開始記錄自己學習過程。
這次在架站花了過多時間在調畫面，最後還是沒到自己滿意狀態；但花的時間過久，決定先生出第一篇文章之後再來調剩下的東西。
希望不會就此停留在現在模板😂
本文 這次選擇Hugo主要是因為朋友推薦、中文資源夠多，再加上主題豐富，於是自己花時間摸索一下也覺得不難就決定選用Hugo。
一、環境變數設定 1、首先到Hugo官方提供下載點將相對應個別系統的安裝包下載下來。
2、將下載下來安裝包解壓縮後會得到以下檔案。
3、將hugo.exe檔案複製或剪下至C:\
4、設定系統環境變數，路徑:控制台&amp;gt;系統及安全性&amp;gt;系統&amp;gt;進階系統設定。
5、選擇系統環境設定。
6、系統變數Path點選編輯。
7、新增系統變數，這邊因為我將hugo.exe放在C巢跟目錄底下因此設定為C:\。
8、接下來回到C:\使用CMD測試hugo，輸入hugo version，只要出現以下畫面就代表環境設定完成。
 二、架設方式 1、使用CMD輸入hugo new site &amp;ldquo;你要放資料夾的位子&amp;rdquo;。
2、hugo會自動建立預設資料夾。
然後就可以套用自己想要的主題到themes這個資料架內，主題可以到以下連結選擇。
3、套用主題，在themes資料夾使用CMD輸入git clone &amp;ldquo;你想要的主題&amp;rdquo;。
4、順利下載就會出現許多新資料夾。
5、接下來就是修改內容改成自己想要的樣子就算完成了。
 三、預覽方式 1、在資料夾使用CMD輸入hugo server -v。
 這裡要注意的是因為我們將hugo放在C:\，因此要啟用server時要將路徑給上。   2、接下來只要用瀏覽器輸入http://localhost:1313/就可以看到自己的網站了。
 四、部屬方式 1、首先到Github建立兩個Repository，一個隨便、另一個要為&amp;rsquo;你的帳號&#39;.github.io。
2、在hugo存放自己blog的資料夾下建立public，並連結GitHub上自己的Repository。
git submodule add -f https://github.com/sunnyday0932/sunnyday0932.github.io.git public3、在資料夾使用CMD輸入C:\hugo執行建立內容到public，成功的話在public內會出現以下資料夾。
4、將public 內檔案 commit and push 到&amp;rsquo;你的帳號&#39;.github.io。
5、回到存放blog的資料夾內，連結git上存放blog的Repository。
git remote add origin https://github.com/sunnyday0932/hugo_blog.git6、commit and push 到github上。
7、接下來只要輸入https://&amp;lsquo;你的帳號&amp;rsquo;.github.io/即可預覽網站。
五、參考連結 https://carrie-lai.github.io/post/createhugoblog/
https://raychiutw.github.io/2019/Hugo-%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8/</description>
    </item>
    
  </channel>
</rss>
