<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Sian</title>
    <link>https://sunnyday0932.github.io/tags/sql/</link>
    <description>Recent content in SQL on Sian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 27 Nov 2020 22:19:33 +0800</lastBuildDate><atom:link href="https://sunnyday0932.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL 模糊搜尋Like替代方式</title>
      <link>https://sunnyday0932.github.io/2020/sql-%E6%A8%A1%E7%B3%8A%E6%90%9C%E5%B0%8Blike%E6%9B%BF%E4%BB%A3%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 27 Nov 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/sql-%E6%A8%A1%E7%B3%8A%E6%90%9C%E5%B0%8Blike%E6%9B%BF%E4%BB%A3%E6%96%B9%E5%BC%8F/</guid>
      <description>本文 今天在查找SQL效能Like會引起吃不到索引的情況忽然學會一招，一定要趕快紀錄一下。
在處理模糊搜尋的條件常常會使用LIKE&#39;%關鍵字%&amp;lsquo;這種做法，但SQL的索引在LIKE&amp;rsquo;%關鍵字&amp;rsquo;的情況會失效，更不用說使用LIKE&#39;%關鍵字%&amp;lsquo;當資料一大效能真的是非常差。
這裡介紹一個替代使用語法 CHARINDEX。
首先我們先看一下MSDN介紹用法。
這裡可以知道charindex其實是可以用來計算兩個字元間有多少相同的地方。
現在來測試一下
SELECT CHARINDEX(&#39;a&#39;,&#39; apple is apple&#39;) 結果：
或是可以用來判斷相同的字元出現的位子。
SELECT CHARINDEX(&#39;a&#39;,&#39;appleisapple&#39;,5) 結果： 這邊第三個參數5是從第五個字元開始往後搜尋。
所以如果改成0結果就會是
SELECT CHARINDEX(&#39;a&#39;,&#39;appleisapple&#39;,0) 結果： 替代LIKE的方式 好了說了這麼多到底要怎麼替代LIKE呢？
可以使用這種方式替代
CHARINDEX(&#39;模糊搜尋關鍵字&#39;, 要搜尋的資料行) &amp;gt; 0 實際測試，使用NorthWind Product Table
SELECT * FROM [Northwind].[dbo].[Products] where CHARINDEX(&#39;a&#39;,ProductName) &amp;gt; 0 使用CHARINDEX結果： SELECT * FROM [Northwind].[dbo].[Products] where ProductName LIKE &#39;%a%&#39; 使用LIKE結果： 哪種方式比較好？ 因為在家裡沒有這麼大量的資料做測試，在公司的時候實際測試，如果再沒有吃到索引的情況下CHARINDEX會比LIKE還要快，但如果有吃到索引LIKE的速度還是優於CHARINDEX的。
所以如果在非得需要進行LIKE&amp;rsquo;%關鍵字%&amp;lsquo;搜尋資料時，沒辦法吃到索引，就可以使用CHARINDEX來替代LIKE，大家可以自行測試看看。
參考資料  1、CHARINDEX。 2、SqlServer之like、charindex、patindex區別及性能分析。  </description>
    </item>
    
    <item>
      <title>SQL FOR XML合併欄位顯示 SUBSTRING擷取字串</title>
      <link>https://sunnyday0932.github.io/2020/sql-for-xml%E5%90%88%E4%BD%B5%E6%AC%84%E4%BD%8D%E9%A1%AF%E7%A4%BA-substring%E6%93%B7%E5%8F%96%E5%AD%97%E4%B8%B2/</link>
      <pubDate>Fri, 29 May 2020 22:19:33 +0800</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/sql-for-xml%E5%90%88%E4%BD%B5%E6%AC%84%E4%BD%8D%E9%A1%AF%E7%A4%BA-substring%E6%93%B7%E5%8F%96%E5%AD%97%E4%B8%B2/</guid>
      <description>前言 前陣子工作上需求，需要做匯出報表功能，要將不同欄位資料合併再一起後匯出，順手記錄一下。
本文 示範資料表如下
我們需要把相同Level的欄位匯總再一起，做成一個統計用報表。
首先每個區域後面先加、
select District+&#39;、&#39; from DistrictData 接下來使用
select level, ( select District+&#39;、&#39; from DistrictData as B where A.Level = B.Level FOR XML PATH(&#39;&#39;) )AS District FROM DistrictData AS A GROUP BY level 即可得到想要的成果。
其中FOR XML PATH(&#39;&#39;)功能是因為如果沒有加的話會出現以下錯誤訊息。
接下來會發現顯示格式不太對，要加上、的部分最後一筆應該要排除。
這時候就可以使用SUBSTRING
select SUBSTRING(&#39;大安區、信義區、松山區、中山區、中正區、&#39;,0,LEN(&#39;大安區、信義區、松山區、中山區、中正區、&#39;)) 可以得到以下。
SUBSTRING這個語法中SUBSTRING(string, start, lenth)，第1、2個參數代表的是string這個字串中要起始的位置為start，lenth則為最後要計算數字。
簡單實驗一下
select SUBSTRING(&#39;123&#39;,0,3) 這邊我們會得到
參考資料 https://www.1keydata.com/tw/sql/sql-substring.html
https://dotblogs.com.tw/flairming/2014/02/14/143993
https://dotblogs.com.tw/supershowwei/2016/01/26/145353</description>
    </item>
    
  </channel>
</rss>
