<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serilog on Sian</title>
    <link>https://sunnyday0932.github.io/tags/serilog/</link>
    <description>Recent content in Serilog on Sian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 13 Dec 2021 01:40:45 +0000</lastBuildDate><atom:link href="https://sunnyday0932.github.io/tags/serilog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Serilog 簡單紀錄 Log</title>
      <link>https://sunnyday0932.github.io/2021/%E4%BD%BF%E7%94%A8-serilog-%E7%B0%A1%E5%96%AE%E7%B4%80%E9%8C%84-log/</link>
      <pubDate>Mon, 13 Dec 2021 01:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2021/%E4%BD%BF%E7%94%A8-serilog-%E7%B0%A1%E5%96%AE%E7%B4%80%E9%8C%84-log/</guid>
      <description>前言 本篇主要紀錄簡單應用，多會使用 Linqpad 加以介紹。
本文 首先依據官方文件我們需要先安裝 Serilog 的 Nuget 套件。
要安裝的有以下三個：
安裝完成後就可以使用官方提供的範例來練習寫一個 Log
void Main() { Log.Logger = new LoggerConfiguration() .MinimumLevel.Debug() .WriteTo.Console() .WriteTo.File(&amp;#34;D:/logs/myapp.txt&amp;#34;, rollingInterval: RollingInterval.Day) .CreateLogger(); Log.Information(&amp;#34;Log Test&amp;#34;); int a = 10, b = 0; try { Log.Debug(&amp;#34;Dividing {A} by {B}&amp;#34;, a, b); Console.WriteLine(a / b); } catch (Exception ex) { Log.Error(ex, &amp;#34;Something went wrong&amp;#34;); } finally { Log.CloseAndFlush(); } } 在上面這個範例中，我們指定了 Log 存放於 D:/logs/myapp.txt 這個檔案中，而後面這個變數則可以指定存放的檔案名稱是以甚麼來做為區分，目前是使用當天日期。
也是有其他的選項可以做選擇
範例
Log 內的檔案資訊如圖</description>
    </item>
    
  </channel>
</rss>
