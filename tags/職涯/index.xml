<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>職涯 on Sian</title>
    <link>https://sunnyday0932.github.io/tags/%E8%81%B7%E6%B6%AF/</link>
    <description>Recent content in 職涯 on Sian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 21 Feb 2025 02:40:45 +0000</lastBuildDate><atom:link href="https://sunnyday0932.github.io/tags/%E8%81%B7%E6%B6%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>軟體工程師資歷五年心得雜記</title>
      <link>https://sunnyday0932.github.io/2025/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%BA%94%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</link>
      <pubDate>Fri, 21 Feb 2025 02:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2025/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%BA%94%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</guid>
      <description>本文 距離上一篇心得文也過了兩年多，今年算起來也工作六年了，但還沒真的滿六年，於是就以五年當作標題，心得文沒有每年更新其實就只是單純覺得好像也沒什麼長進(?)，沒有特別想留下點紀錄。 所以突然又回來寫也只是一時興起，剛換到新的工作岡位滿三個月，期間滿多自省，於是就想留下這些想法，供以後在某個時刻掙扎的自己、或是有共鳴的人見笑見笑。
每間公司對 Senior 的定義都有所不同，我很幸運在這個資歷下能被認可是一位 Senior 了，但一位 Senior 該做些甚麼呢？大家又對 Senior 有哪些期待？又有哪些自己覺得是 Senior 該做的事呢？ 在剛加入新公司的時候聽完引薦進入公司的前輩敘述，我內心覺得是個可以好好發揮自己技術能力的地方，只要我能夠展現足夠強大的火力，一定沒有問題的。
抱持這樣想法的我在初期對焦完主管的目標後很快的就投入專案的開發、系統的重構，架構的規劃，我內心也覺得這確實是個正確的方向，只要把這些技術上我能夠發揮長處的地方展現出來一定能在這個環境發生一些改變。 很快的我就發現好像沒有取得甚麼同事的共鳴，「我知道程式可能這樣寫比較好，但原本也可以解決問題啊？」，「我知道架構設計是為了解決某些問題，但是我這樣比較快定位問題啊？」，類似的對話會在交流工作上的內容時不斷地出現。
我知道文化、環境一定都有一些影響但為甚麼這些東西身為一位軟體工程師你不在乎呢？初期遇到這些狀況的我內心很快就浮現這種負面的想法，帶著這些困惑跟幾位朋友、前輩討教後，很快的我也找到了問題的原因，做了這些我有馬上減輕他們的工作量嗎？有對他們帶來甚麼實質性的幫助嗎？
在日常繁忙的工作流程中，能夠把工作持續的交付已經耗費大家很大的力氣了，共感這樣的背景後，很快我也產生了另一個疑問，所以就可以不把程式寫好嗎？
帶著新的疑惑前進的期間剛好看到了幾位業界知名的前輩推薦一部韓劇「外傷重症中心」，裡面的台詞「去找出屬於你自己的動力吧，即使累得像狗，就算被人糟蹋，也不會讓你改變的那種動力。」，我想是我太著急了吧，於是決定先以分擔大家工作量為出發點，再一邊推行想要推行的項目。
儘管內心還是有一些掙扎，當下我確實以為這就是我要的答案，於是又過了一段時間，近期發生了幾件事後，突然有點頓悟的感覺，很快就聯想到前輩之前提到過在書中看到的一句話「你只能強迫新手們這麼做。過了幾年後，他們會突然恍然大悟，然後腦袋彷彿重生！」
或許我就是必須要跟著大家多繞點彎路，陪著大家一起犯錯，並適時的提供自己的經驗。
想到這裡突然就很感謝這些年陪著我練功的前輩們，當時看著我繞彎路時他們心情是甚麼呢？有沒有過我現在這種掙扎？
原來只是換我接棒了而已，這是我現在的答案，曾經聽過前輩們心中有種「憑一口氣，點一盞燈。」的氣魄想要改變整個大環境，我沒有那麼大的夢想，但受人恩惠的我也會試著把從大家身上學來的東西傳承下去的。
後記 以上大概是近期一些心得感想，沒有任何技術內容，沒再持續寫技術文也只是因為自己懶然後又發現有別人寫得比自己更好於是就看別人的為主了，這兩年有感越資深基礎的知識越重要，另外這一年多 AI 工具的出現真的是改變了自己學習的方式，雖然不知道 AI 未來會如何持續發展以及有沒有可能這麼快威脅到自己的工作，還是很慶幸自己活在這個時代，能夠親眼見證一個新時期的到來，這就是最後的碎嘴。</description>
    </item>
    
    <item>
      <title>軟體工程師資歷三年心得雜記</title>
      <link>https://sunnyday0932.github.io/2022/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%B8%89%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</link>
      <pubDate>Fri, 07 Oct 2022 02:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2022/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%B8%89%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</guid>
      <description>本文 1、主管的惡趣味。 在今年六月大家都深受疫情影響正處於 WFH 時期的某個上班日，主管在一早突然發了個訊息問方不方便通話，居家辦公後已經很熟悉這種溝通模式了；只記得在電話接起後主管一如往常的第一句總是會帶著輕鬆的語氣寒暄「嗨，今天過得好嗎？」沒等我回答他接著說道「隔壁單位沒人了，跟上面主管討論後會送你過去，過去後會擔任主管角色，需要從 0 開始組建團隊，之前給你的都是一些練習，這次是個不錯的機會。」
這一年自我察覺成長最多的地方是面對這種突如其來的狀況，大部分情況都能冷靜應對，主管大概是看我沒太多情緒反應這事就這麼定下來了，一兩周的適應期過後就正式被轉調到新單位去。
2、面對一片未知。 新單位負責的產品面向不同，因為中間有斷層導致許多 Domain 沒有被留存下來，在這種情況下缺乏文件保存知識、甚至因為斷層導致跟外單位合作作業流程上的不一致，這都是一過去新單位馬上隨之而來要面臨的問題，基本上跟換一個新工作是一樣的。
在這之前過去主管有教導過，面對未知如何理清思緒，先把問題分類，「已知的未知是不可怕的，我們可以提前部屬相對應的措施」
所以到新單位後陸續新建了一些流程、文件、甚至是想辦法理清跟外單位的合作模式，看到這你就可以理解為甚麼上面第一個標題會寫主管的惡趣味，真的是玩笑開大了。
3、帶人。 在上一個單位主管有給予一些練習空間，帶領新人熟悉環境、分配工作任務之類的責任賦予給我，在那時其實沒什麼多大的感覺，只覺得可以嘗試看看；而到新單位隨之面臨的是需要擴編，馬上就會需要帶領新人，在這之前因為有做過一些練習大致上知道怎麼讓他們了解產品現況、會面對的問題，以及最重要的是要把團隊流程讓每一位新成員都了解。
甚至面臨到馬上就有成員要離開，學著要如何面對這種情況，真的是讓我體會到很多過去職涯沒接觸過的事情，再次回應第一個標題，主管的玩笑真的開大了。
4、流程。 過去單位在我加入的時候已經有一套既定的流程，但是在加入後隨著團隊成員大家的狀況不同、甚至是外單位的一些變動，我們隨之調整了團隊的流程；流程這東西平常真的沒有甚麼太大感覺，甚至會覺得好麻煩喔，為甚麼要這樣做？ 但一旦出現狀況的時候如果有先預訂好流程，真的能起到很大的作用。
抱持著這樣的想法我也就想要在新單位把流程建立起來，馬上就遇到的問題是原單位主管在一次工作坊的活動上，請我們把目前已知的團隊流程寫下來，每個人都寫一份自己認知中的流程。
結果出來是大部分的流程是一致的，但一些細部的步驟每個人寫的都不一樣，這時候才真的意識到用講的大家聽到的結果都是不一樣的，於是也透過了理清工作流程，最後記錄下來確保團隊認知一致。
5、管理還是技術? 這是我一換新單位面臨的最大問題，一直到現在我都還沒有一個確切的答案，心裡深知能用的時間有限，但又不確定往哪邊走才是對的，這個問題就繼續留待明年寫心得文的時候看看會不會有甚麼新想法吧。
後記 雖然內文提到主管的惡趣味，但其實也是今年年初制定個人年度目標的時候跟主管深聊過職涯規劃的事，才有了這一些嘗試機會；之前看過軟體工程師三年會遇到第一個崁，我沒想過自己的崁會是個甚麼樣的狀況，但現在碰到了還真的是有種被開了一個不小玩笑的感覺。
朋友有問過目前狀況是你想要的嗎?
這問題真的很難回答，想不想要或喜不喜歡我覺得可能都需要一段時間後才能回答，而現在的想法就是可以嘗試看看，所幸目前的選擇帶來的結果都還是快樂、有趣的。
最後不免俗的雞湯時間，跟去年那篇文章一樣，若看到這得你職涯上還沒遇到甚麼崁，祝你一路順遂；若是正值你的職涯惡趣味時期，希望你不要覺得孤單，祝你早日走出苦難。</description>
    </item>
    
    <item>
      <title>軟體工程師資歷兩年心得雜記</title>
      <link>https://sunnyday0932.github.io/2021/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E5%85%A9%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</link>
      <pubDate>Thu, 30 Sep 2021 02:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2021/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E5%85%A9%E5%B9%B4%E5%BF%83%E5%BE%97%E9%9B%9C%E8%A8%98/</guid>
      <description>前言 最近看到 Huli 大大兩篇文章：
那些人生中的轉折 那些印象深刻的經歷 想到去年這個時候也寫了一篇 軟體工程師資歷一年心得分享，如果真的如當初跟朋友相約要持續寫下去，感覺來開個系列文也是不錯的選擇，也很好奇日後回過頭來看這些文章會是甚麼樣的心情；雖然目前已荒廢兩個月，趕緊找個主題寫一下。
本文 1、換工作了。 在資歷即將滿兩年的時候選擇了前往下一站，身邊朋友大概知道我再一開始規劃上就是這樣打算的，雖然實際執行的時候自己這麼果斷現在想起來也是很驚訝；原因的話就是自己想出去看看，很感謝在上一間公司提供了良好的環境、主管很肯給我機會、前輩不吝賜教還有同期的朋友互相學習，過去一年真的是我成長最快速的時期，之前看過 商業思維學院院長文章 - Gipi 游舒帆：頭兩份工作型塑你對職場的認知，第一份工作能讓我對職場有很多正向認知真的由衷感謝。
2、刪了很多文章。 如果有注意看文章的朋友應該發現很多文章不見了，其實就是自己做錯事了趕快想辦法補救，之前有些技術文章都是參考公司大神寫的內部文件所寫、程式碼也是，當然寫的部分都沒有參雜公司商業邏輯但自己沒設想好這樣不妥於是就放在了自己的部落格以及 Github ，畢竟是屬於公司內部資產，請大家不要模仿這樣的行為。
3、新工作環境。 朋友說過：「爛的程式碼要看過，才知道好的是怎麼樣。」大概就類似美食是比較出來的，你要先吃過難吃的食物才會懂得品嘗美味的食物．．．
雖然在前公司也是有一些 Legacy Code 的存在，但在這還真的是讓我開了不少眼界，舉例來說如 RestFul API 的 GET 裡面居然有 Delete 的行為；同事說過每天都像在開箱，真的是每每打開都是驚不驚喜、意不意外啊這種感覺。
但團隊真的很強，首先自己比較在意的 PM ，終於有一種我認知上的 PM 就該是這樣，甚至比自己想的還要強一點(如果有以前合作過的 PM 看到這邊我真的沒有其他意思，還是很在意的話我這邊先道歉嘛 XD)。
QA ，之前沒有跟專業 QA 合作過，大多都是 Monkey Testing ，第一次知道專業的 QA 是如何透過不同角度看系統，讓 PG 可以很安心的製造 Bug (?
RD，這邊的 RD 群也是臥虎藏龍就連前端同事資歷都很深，聊到後端技能也是能給出不少有用的建議，技術上還真的不怕找不到人問。
Domain knowledge 大概是目前遇到最為頭痛的問題，在前公司再怎麼樣都能找到 Domain knowledge 很熟悉的前輩能夠對目前遇到的狀況給予一些解法建議，但目前就是只能像開戰爭迷霧一樣的情況自己慢慢摸索片段組裝後猜想可能的情境；這也是讓我改觀原來熟知 Domain knowledge 對一間公司真的是滿重要的。
4、真的有朋友成為軟體工程師了。 去年會寫那篇文章作為分享，主要是當時真的不少人問了差不多的問題，後來有一位朋友真的很認真想嘗試，在今年年初已經成功踏入職場，到現在也過了半年的時間，前些日子聊聊雖然辛苦但感覺也漸漸熟悉步調了，真心替他感到開心。
5、重新思考了目標。 在準備選擇 offer 的時候，當時前輩有說過：「都是機會。」，在前陣子工作上遇到滿緊急的情況時突然理解了這句話真正涵義，連四天加班懷疑人生的時候就會想起以前覺得負責內容還算上手，就是有著前輩們幫忙分擔了那些不簡單的部分。</description>
    </item>
    
    <item>
      <title>技術管理者論壇(從商業應用驅動架設設計) - 心得</title>
      <link>https://sunnyday0932.github.io/2021/%E6%8A%80%E8%A1%93%E7%AE%A1%E7%90%86%E8%80%85%E8%AB%96%E5%A3%87%E5%BE%9E%E5%95%86%E6%A5%AD%E6%87%89%E7%94%A8%E9%A9%85%E5%8B%95%E6%9E%B6%E8%A8%AD%E8%A8%AD%E8%A8%88-%E5%BF%83%E5%BE%97/</link>
      <pubDate>Sat, 29 May 2021 01:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2021/%E6%8A%80%E8%A1%93%E7%AE%A1%E7%90%86%E8%80%85%E8%AB%96%E5%A3%87%E5%BE%9E%E5%95%86%E6%A5%AD%E6%87%89%E7%94%A8%E9%A9%85%E5%8B%95%E6%9E%B6%E8%A8%AD%E8%A8%AD%E8%A8%88-%E5%BF%83%E5%BE%97/</guid>
      <description>本文 這次主題主要是分享主題是架構師是如何從商業應用場景來設計目前的系統架構。
1、架構思維 傳統我們對架構師的期待可能就是技術要很強、懂得如何建構系統就好(還是其他人的印象不一樣，只是我以為？)
講師 Jed 分享下對這印象改觀了不少。
架構師的腳色定位為何?
技術的廣度與深度 處理人與人之間的關係(軟實力) 理解與實踐組織期望 傳統的場景比較像是由架構師一人規劃系統、負責核心底層，後續才交由其他PG設計。
但 Jed 這邊分享認為更好的方式是兩邊一起緊密合作溝通而非單向傳授，畢竟架構設計並沒有完美這件事&amp;hellip;
這邊也提到架構師很難專精某一項技術，因為有許多考量、商業考量、安全性考量、預算考量，要學習的範圍擴大，不只有技術這一項需要學習而已。 最印象深刻的是 Jed 分享提到以技術深度來說，團隊內的工程師經理、資深工程師都有比自己更強的部分，但架構師要懂得更廣。
中間也帶了一個小範例講解兩種快取可能需要考慮到的地方。
最後帶到了
架構師的第一法則
軟體架構的一切皆是取捨，技術了解的深度與廣度，要考慮業務面的需求。
小節：
過去:
架構師設計核心底層、元件開發。
可能造成的問題
當架構出了問題，架構師必須要在才能改的動
造成了架構上的瓶頸
這邊自己心得分享，目前工作確實也遇過幾次因為先前設計架構的架構師不在了，大家想要改動卻礙於對架構不夠熟悉、不夠了解，不敢輕易去改動。
所以新的方式:
應該是讓架構師規劃後，讓團隊成員去開發。
架構師應該只需要負責一部分的業務需求開發，這樣除了維持架構師的技術，也能提升團隊成員對整體架構了解程度。
2、需求結構化與架構特性 來源書:一線架構師實際指南 功能性需求(Functional Requirements) 約束性需求(Constraint) Ex:資源約束、商業約束、法律約束、資安約束等。 品質屬性(非功能性需求 Non-Functional Requirements) 品質屬性，最常被忽略，需求單位不會知道這是甚麼，大多是需要技術人員才能提出
ex:效能相關問題，頁面的回應時間要低於幾秒，同上人數要多少?
這邊也帶了一個小範例電商需要考慮的需求矩陣有哪些
重點：不同的需求其實會有交互影響的。
所以應該要考量：
不同的需求依照不同的層級歸納出我們需要注意的東西是甚麼
可以依此找出關鍵需求，哪些是不能放棄的，再來決定要用哪個架構特性。
關鍵要做到：
3、軟體是為了解決複雜問題 這個小節最大重點應該是右下那張圖XD
盲點： 不要從技術的角度來設計架構，會與現實脫節，因為商業才是現實面最大的考量。
從第一場 Gipi 院長到第二場講師 Jed 分享都有一再提到過這件事，技術開發者很容易陷入由技術為主要考量的出發點，但現時面還是要回歸到商業，畢竟一間公司的營運都是需要考量到錢。
在此就有提到幫助釐清問題的邊界方法，有帶到了 DDD。
主要有三個邊界需要考量：
商業問題邊界 人員溝通問題邊界 技術邊界 Jed 提到當你理解商業時，可以幫你驅動技術變化，而當你的技術進步，有時也會促進商業進化。
商業的策略驅動軟體服務的進化實例：
很多公司把軟體變成 SaaS 服務。</description>
    </item>
    
    <item>
      <title>技術管理者論壇(商業與技術的平衡) - 心得</title>
      <link>https://sunnyday0932.github.io/2021/%E6%8A%80%E8%A1%93%E7%AE%A1%E7%90%86%E8%80%85%E8%AB%96%E5%A3%87%E5%95%86%E6%A5%AD%E8%88%87%E6%8A%80%E8%A1%93%E7%9A%84%E5%B9%B3%E8%A1%A1-%E5%BF%83%E5%BE%97/</link>
      <pubDate>Sat, 17 Apr 2021 06:40:45 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2021/%E6%8A%80%E8%A1%93%E7%AE%A1%E7%90%86%E8%80%85%E8%AB%96%E5%A3%87%E5%95%86%E6%A5%AD%E8%88%87%E6%8A%80%E8%A1%93%E7%9A%84%E5%B9%B3%E8%A1%A1-%E5%BF%83%E5%BE%97/</guid>
      <description>前言 作為未來有興趣往 PM 發展的工程師，閱讀到這段馬上就選擇報名了。
本文 上半場 開場由 91APP 的 Ruddy 老師導引了一些敏捷團隊該努力的方向。
自己聽到的重點有：
敏捷團隊不該出現很忙的情況，代表有問題沒有釐清，反思敏捷精神。 小增量 多迭代 求回饋 尋求議題清晰，目標清楚。 使用 OKR。 詳細內容可參考 Ruddy 老師寫的這篇文章：
主管；你很忙嗎?
這邊個人理解成，真正有照著敏捷跑的團隊因為目標夠明確，能夠切分，所以應該都要能夠在一個時程內完成。
上半場的感想，確實比較面相對已經是管理階級的工程師開的論壇，但整個大主題圍繞在 傳承 這些經驗、或是帶著大家找尋最佳解，就代表也需要有新血流入，況且主題是管理結合技術本來就是我比較感興趣得題目，可以再多關注社群公布的消息。
下半場 下半場開場由商業思維學院院長 Gipi 分享之前在業界的經驗。
首先提到了為何台灣的技術思維還停留在原始代工的階段，而期望達到的境界為：
從他的自身經驗分享提到公司團隊合作方式。
第一階段：未開化時期。 所有需求單位都可以直接對工程師提需求，而造就了這種情況。
這張圖出現的時候，馬上就引起不少共鳴XD
第二階段：逐漸敏捷。 公司開始有一個產品經理的職位出現，但因為以前都能直接對工程師提需求，所以需求單位並不習慣這種方式，於是就需要有數據佐證，透過產品經理的職位來達到雙向溝通；提升了多少等數據。
這邊有提到目前大多數的公司敏捷團隊都只停留在技術團隊，有沒有可能跨出技術團隊，讓整個組織都敏捷呢？
第三階段：敏捷完整體。 讓敏捷的精神跨出技術團隊，帶入整個公司，Gipi 提到，他們當初是透過接收需求端後，找出目標實驗客群，透過目標推送客製化內容，每兩周讓客服與客戶對焦回饋心得，以此方式迭帶收集需求，最後找到一個最佳解再進行工程團隊開發。
第二個主題分享是目前很多企業推廣敏捷、OKR、轉型的原因。
敏捷 世界為何變得 VUKA？
VUKA 是「波動、不確定、複雜和模糊的縮寫」（volatile, uncertain, complex and ambiguous）。
1、全球化。
=&amp;gt; 競爭對手已經不適原本所想的那些人。
這邊自己所想到的例子是：Amazon。
從最早的網路書店，轉型成電商平台，現在又跨足了雲端、食品、影視等產業。
因為基礎建設完善，跨足產業容易，因為這些產業而形成了亞馬遜生態系。
2、尋求變化速度改變。
網路更快、消費意識抬頭、全球化競爭 =&amp;gt; 應變速度要更快。
Ex:過去鄉下地方買電器可能找鄰近的電器行，而電器行會透過合作廠商推廣電器，消費者選擇少；現今使用網路選擇多樣化的情況下，廠商競爭者變多了。
3、商業合作面。
過去產業鏈單純、現在跨界企業出現。
講者是以 Tesla 顛覆汽車業做舉例。
這邊我也是想到 Amazion，顛覆原產業、連結整個 Amazon 生態系。</description>
    </item>
    
    <item>
      <title>軟體工程師資歷一年心得分享</title>
      <link>https://sunnyday0932.github.io/2020/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%B8%80%E5%B9%B4%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sunnyday0932.github.io/2020/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%B3%87%E6%AD%B7%E4%B8%80%E5%B9%B4%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/</guid>
      <description>前言 有鑑於真的被問了不少次，所以就以分享的角度來回覆一些相關問題，盡量不會帶太多個人情緒在內，以供參考；個人資歷勉強算是一年而已，所以漏看了甚麼、或是回覆有些誤解還請各位多擔待。
開始前還是先推薦一篇文章。
轉職軟體工程師可能沒有你想像中的那麼美好 本文 １、想學程式有沒有甚麼建議？ 大多數回覆我都會說如果「不排斥」的話，可以先找網路上的一些資源每天花一點時間看看，持續一段時間自己的感覺如何再來做決定。
回答「不排斥」這不是因為我不想多分享，就自身經驗來看我認為目前在這產業我僅能算是「不排斥」這份工作而從事而已；原因當然是因為進入業界後你會看到很多神人、甚至同事就有對程式癡迷的，大家都對程式有某些堅持，在這種環境我根本是小巫見大巫，說我喜歡程式&amp;hellip;嗯？
2、想從事你覺得適合嗎？ 這問題出現幾次我大概就會打太極幾次，也不是刻意，但畢竟是自己的人生嘛&amp;hellip;
好啦認真回覆。
首先如果是覺得原先工作辛苦、或是不如意想換換工作的人，我能給的建議就是 每份工作都有辛苦的地方 ，你和我覺得辛苦的尺度也不一樣，我不知道要怎麼以「客觀角度衡量主觀認定事實」後給予建議，所以 go big or go home？
3、工作內容、或是日常都在做甚麼？ 這可能會很常讓人誤解的是軟體工程師只要會寫程式就好，但以我自身經驗、看相關書籍、與朋友聊天得來的結果幾乎都是比起寫程式、更容易遇到要 與人溝通這件事；其實也不難理解，或是不難解釋這件事，畢竟程式寫出來就是給人用的，所以日常就是需要解決人的問題。
所以我認為除了寫程式的基本能力以外、「溝通」會是佔滿大一部分的日常工作。
4、是不是一直要學習新東西？ 是、沒錯、YES，就是你想的那樣。
不管是你主動、或是被動要求這件事都是肯定會發生的，身邊朋友或是大神隨便一個都是家裡有整櫃技術類書籍的，不然你以為我很閒沒事寫這些文章？沒事看書？
5、待遇如何？ 這問題承上，首先起薪比一般工作高是事實，之後就是這工作吸引人的地方了，一切都看實力說話，會持續學習東西、看新技術，有一部分就是因為薪水漲幅是可預見的。
6、工作環境？ 還是得先提醒一下，每間公司不同，我只能以我所看見的來分享。
如果要看精彩的歡迎點選右邊這連結 靠北工程師。
我很幸運的是目前工作的環境還不錯，工時正常、同事願意互相討論、上級也很願意協助解決問題；算是滿樂於互相分享、幫助的環境，這也與我一開始看到軟體工程師郎好氛圍這件事一樣，套句公司大神跟我說的：「我們公司比上不足，比下有餘。」
但有些朋友待的公司可能就不大相同、加班常態，工作內容強硬等都是有所耳聞的，還是上面那句，要看精彩的請去靠北工程師。
7、職涯？ 年齡的確是工程師的硬傷，甚至矽谷也有很多傳聞35歲以上工程師就不太有人要了；但就我來看其實也不然全是這樣，之前看過一本書寫到「做一件事十年，跟認真做一件事十年是不一樣的。」
在職場的價值是需要靠個人耕耘跟規劃的，說不準到底會發生甚麼事，還是老話一句，你自己走走看就知道了。
後記 步入職場也快滿一年了，一開始寫這些文章純粹就是朋友相約、大神鼓勵，決定要記錄學習歷程，幫助自己以後忘記好找答案、或是能在職場上傳達有自學能力這件事，也沒想過這些文章會這麼快對其他人有所幫助；最後還是要說畢竟才一年，可能還有很多沒看到的東西，所以這僅是我的淺見希望對各位思考這些問題時有所幫助。</description>
    </item>
    
  </channel>
</rss>
